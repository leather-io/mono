default_platform(:android)

desc "Build and distribute Android app"
lane :build_android do |type|
  if is_ci
    setup_ci
  end
  if type == "prod"
    build_output = gradle(
      task: "assemble",
      build_type: "Release",
      project_dir: "android", # Updated path to point to the Android project root
      properties: {
        "android.injected.signing.store.file" => ENV['LEATHER_UPLOAD_STORE_FILE'],
        "android.injected.signing.store.password" => ENV['LEATHER_UPLOAD_STORE_PASSWORD'],
        "android.injected.signing.key.alias" => ENV['LEATHER_UPLOAD_KEY_ALIAS'],
        "android.injected.signing.key.password" => ENV['LEATHER_UPLOAD_KEY_PASSWORD']
      }
    )
    puts "BUILD OUTPUT: #{build_output}"
  else
    build_output = gradle(
      task: "assembleRelease",
      project_dir: "android", # Updated path to point to the Android project root
    )
    puts "BUILD OUTPUT: #{build_output}"
  end
end

lane :notify_slack do |display_version:, build_version:, testing_url:, firebase_console_url:|
  puts "DISPLAY VERSION: #{display_version}"
  puts "BUILD VERSION: #{build_version}"
  puts "TESTING URL: #{testing_url}"
  puts "FIREBASE CONSOLE URL: #{firebase_console_url}"
  slack(
    message: "A new Android build is ready to be tested! v#{display_version}+#{build_version}",
    default_payloads: [:git_branch, :last_git_commit_hash],
    attachment_properties: {
      fields: [
        {
          title: "Testing URL",
          value: testing_url,
          short: false
        },
        {
          title: "Firebase Console URL",
          value: firebase_console_url,
          short: false
        }
      ]
    }
  )
end

lane :distribute_android_beta do
  build_android(type: "beta")
  
  increment_version_code(app_project_dir: "android")
  
  # This function returns a hash with the release details: 
  # https://firebase.google.com/docs/reference/app-distribution/rest/v1/projects.apps.releases#resource:-release
  release = firebase_app_distribution(
    app: "1:915379517791:android:d4e7cb446a612f8c789eea",
    groups: "leatherhood",
    release_notes: "New version available"
  )
  
  notify_slack(
    display_version: release[:displayVersion], 
    build_version: release[:buildVersion], 
    testing_url: release[:testingUri], 
    firebase_console_url: release[:firebaseConsoleUri]
  )
end

lane :distribute_android_prod do
  build_android(type: "prod")
  increment_version
  notify_slack
end