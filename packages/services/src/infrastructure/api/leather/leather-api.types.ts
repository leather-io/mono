/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/v1/utxos/{descriptor}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description List all UTXOs for a descriptor */
    get: {
      parameters: {
        query: {
          network: 'mainnet' | 'testnet3' | 'testnet4' | 'regtest' | 'signet';
        };
        header?: never;
        path: {
          descriptor: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              txid: string;
              vout: number;
              value: string;
              /** @description Block Height */
              height?: number;
              address: string;
              path: string;
            }[];
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/transactions/{descriptor}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description List Bitcoin transactions for a descriptor */
    get: {
      parameters: {
        query: {
          network: 'mainnet' | 'testnet3' | 'testnet4' | 'regtest' | 'signet';
          page: string;
          pageSize: string;
        };
        header?: never;
        path: {
          descriptor: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              meta: {
                page: number;
                pageSize: number;
                totalPages: number;
                totalItems: number;
              };
              data: {
                txid: string;
                /** @description Block Height */
                height?: number;
                /** @description Block Time */
                time?: number;
                vin: {
                  txid: string;
                  n: number;
                  /** @description Is Own Address */
                  owned?: boolean;
                  address?: string;
                  path?: string;
                  value: string;
                }[];
                vout: {
                  n: number;
                  /** @description Is Own Address */
                  owned?: boolean;
                  address?: string;
                  path?: string;
                  value: string;
                }[];
              }[];
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/fiat-rates': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get current fiat currency exchange rates */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              /** Format: date-time */
              timestamp: string;
              rates: {
                EUR: number;
                GBP: number;
                AUD: number;
                CAD: number;
                CNY: number;
                JPY: number;
                KRW: number;
              };
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/prices/native': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get all native token prices */
    get: {
      parameters: {
        query?: {
          format?: 'list' | 'map';
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json':
              | {
                  /** @enum {string} */
                  format: 'list';
                  meta: {
                    count: number;
                    /** Format: date-time */
                    timestamp: string;
                  };
                  data: {
                    price: number;
                    /** Format: date-time */
                    lastPriceAt: string;
                    change24h: number | null;
                    symbol: string;
                  }[];
                }
              | {
                  /** @enum {string} */
                  format: 'map';
                  meta: {
                    count: number;
                    /** Format: date-time */
                    timestamp: string;
                  };
                  data: {
                    [key: string]: {
                      price: number;
                      /** Format: date-time */
                      lastPriceAt: string;
                      change24h: number | null;
                    };
                  };
                };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/prices/native/{symbol}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get native token price */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          symbol: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              price: number;
              /** Format: date-time */
              lastPriceAt: string;
              change24h: number | null;
              symbol: string;
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/prices/native/{symbol}/history': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get native token price history */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          symbol: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              price: number;
              /** Format: date-time */
              timestamp: string;
            }[];
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/prices/sip10s': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get top SIP-10 token prices */
    get: {
      parameters: {
        query?: {
          format?: 'list' | 'map';
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json':
              | {
                  /** @enum {string} */
                  format: 'list';
                  meta: {
                    count: number;
                    /** Format: date-time */
                    timestamp: string;
                  };
                  data: {
                    price: number;
                    /** Format: date-time */
                    lastPriceAt: string;
                    change24h: number | null;
                    principal: string;
                  }[];
                }
              | {
                  /** @enum {string} */
                  format: 'map';
                  meta: {
                    count: number;
                    /** Format: date-time */
                    timestamp: string;
                  };
                  data: {
                    [key: string]: {
                      price: number;
                      /** Format: date-time */
                      lastPriceAt: string;
                      change24h: number | null;
                    };
                  };
                };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/prices/sip10s/{principal}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get SIP10 token price */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          principal: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              price: number;
              /** Format: date-time */
              lastPriceAt: string;
              change24h: number | null;
              principal: string;
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/prices/sip10s/{principal}/history': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get SIP10 token price history */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          principal: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              price: number;
              /** Format: date-time */
              timestamp: string;
            }[];
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/prices/runes': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get top Rune prices */
    get: {
      parameters: {
        query?: {
          format?: 'list' | 'map';
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json':
              | {
                  /** @enum {string} */
                  format: 'list';
                  meta: {
                    count: number;
                    /** Format: date-time */
                    timestamp: string;
                  };
                  data: {
                    price: number;
                    /** Format: date-time */
                    lastPriceAt: string;
                    change24h: number | null;
                    runeName: string;
                  }[];
                }
              | {
                  /** @enum {string} */
                  format: 'map';
                  meta: {
                    count: number;
                    /** Format: date-time */
                    timestamp: string;
                  };
                  data: {
                    [key: string]: {
                      price: number;
                      /** Format: date-time */
                      lastPriceAt: string;
                      change24h: number | null;
                    };
                  };
                };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/prices/runes/{runeName}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get Rune price */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          runeName: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              price: number;
              /** Format: date-time */
              lastPriceAt: string;
              change24h: number | null;
              runeName: string;
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/prices/runes/{runeName}/history': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get Rune price history */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          runeName: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              price: number;
              /** Format: date-time */
              timestamp: string;
            }[];
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/crypto-prices': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get current native cryptocurrency prices */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              /** Format: date-time */
              timestamp: string;
              prices: {
                STX: number;
                BTC: number;
              };
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/market/sip10-prices': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get current SIP10 token prices */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              /** Format: date-time */
              timestamp: string;
              prices: {
                price: number;
                /** Format: date-time */
                lastPriceAt: string;
                change24h: number | null;
                principal: string;
              }[];
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/notifications/register': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Register Device for Address Notifications */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      /** @description Params */
      requestBody: {
        content: {
          'application/json': {
            addresses: string[];
            notificationToken: string;
            /** @enum {string} */
            chain: 'stacks' | 'bitcoin';
            /** @enum {string} */
            network: 'mainnet' | 'testnet3' | 'testnet4' | 'regtest' | 'signet';
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              success: boolean;
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/quests/{task}/complete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Complete Quest Task */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          task: 'connect-earn';
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': {
            address: string;
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              message: string;
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/tokens/sip10s': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get top SIP-10 tokens */
    get: {
      parameters: {
        query?: {
          format?: 'list' | 'map';
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json':
              | {
                  /** @enum {string} */
                  format: 'list';
                  meta: {
                    count: number;
                    /** Format: date-time */
                    timestamp: string;
                  };
                  data: {
                    principal: string;
                    assetIdentifier: string;
                    name: string;
                    decimals: number;
                    symbol: string;
                    image: string;
                  }[];
                }
              | {
                  /** @enum {string} */
                  format: 'map';
                  meta: {
                    count: number;
                    /** Format: date-time */
                    timestamp: string;
                  };
                  data: {
                    [key: string]: {
                      assetIdentifier: string;
                      name: string;
                      decimals: number;
                      symbol: string;
                      image: string;
                    };
                  };
                };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/tokens/sip10s/{principal}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get SIP-10 Token */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          principal: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              principal: string;
              assetIdentifier: string;
              name: string;
              decimals: number;
              symbol: string;
              image: string;
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/tokens/sip10s/{principal}/description': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get SIP-10 Token Description */
    get: {
      parameters: {
        query?: {
          locale?: 'en' | 'es' | 'ru' | 'zh';
        };
        header?: never;
        path: {
          principal: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              description: string | null;
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/tokens/runes': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get top Runes */
    get: {
      parameters: {
        query?: {
          format?: 'list' | 'map';
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json':
              | {
                  /** @enum {string} */
                  format: 'list';
                  meta: {
                    count: number;
                    /** Format: date-time */
                    timestamp: string;
                  };
                  data: {
                    runeName: string;
                    spacedRuneName: string;
                    decimals: number;
                    symbol: string;
                  }[];
                }
              | {
                  /** @enum {string} */
                  format: 'map';
                  meta: {
                    count: number;
                    /** Format: date-time */
                    timestamp: string;
                  };
                  data: {
                    [key: string]: {
                      spacedRuneName: string;
                      decimals: number;
                      symbol: string;
                    };
                  };
                };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/tokens/runes/{runeName}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get Rune */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          runeName: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              runeName: string;
              spacedRuneName: string;
              decimals: number;
              symbol: string;
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/tokens/runes/{runeName}/description': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get Rune Description */
    get: {
      parameters: {
        query?: {
          locale?: 'en' | 'es' | 'ru' | 'zh';
        };
        header?: never;
        path: {
          runeName: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              description: string | null;
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/v1/tokens/native/{symbol}/description': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get Native token description */
    get: {
      parameters: {
        query?: {
          locale?: 'en' | 'es' | 'ru' | 'zh';
        };
        header?: never;
        path: {
          symbol: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              description: string | null;
            };
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              error: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: never;
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
