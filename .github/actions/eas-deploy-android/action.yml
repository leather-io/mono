name: EAS deploy Android
description: Run EAS Android deployments
inputs:
  EXPO_TOKEN: # id of input
    description: 'Expo token'
    required: true
  LEATHER_BOT:
    description: 'GH bot token'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Prepare the app
      uses: ./.github/actions/provision

    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch

    - name: Setup Expo and EAS
      uses: expo/expo-github-action@v8
      with:
        eas-version: latest
        token: ${{ inputs.EXPO_TOKEN }}

    - name: Install jq tool and fastlane
      run: |
        sudo apt-get update
        sudo apt-get install jq
        sudo gem install fastlane
      shell: bash

    # Wait for build to either succeed or fail
    - name: ðŸ›« Build for Android Emulator ðŸ›«
      id: android_simulator_build
      run: |
        cd apps/mobile
        if [[ "$BRANCH_NAME" == "dev" ]]
        then
          # No wait on simulator version build of the app if we are on a dev branch
          eas build --platform android --profile=simulator-dev --non-interactive --no-wait
        else
          # set temporary command output 
          setTmpOutput () { tee /tmp/capture.out; }

          # get temporary command output 
          getTmpOutput () { cat /tmp/capture.out; }
          
          eas build --platform android --profile=simulator-pr --non-interactive | setTmpOutput 

          # Last line of the build output is the link to the expo build
          UNSAFE_BUILD_LINK=$(getTmpOutput | tail -n 1)

          if [[ $UNSAFE_BUILD_LINK == *"https://expo.dev/accounts/leather-wallet/projects/leather-wallet-mobile/builds/"* ]]; then
            echo "Found build link!"
            echo "BUILD_LINK=$UNSAFE_BUILD_LINK" >> $GITHUB_OUTPUT
          else
            echo "No build link!"
          fi

        fi
      shell: bash
      env:
        BRANCH_NAME: ${{ steps.extract_branch.outputs.branch }}

    - name: Publish Android expo build link in PR
      if: ${{ steps.extract_branch.outputs.branch != 'dev' }}
      uses: actions/github-script@v7
      env:
        BUILD_LINK: ${{ steps.android_simulator_build.outputs.BUILD_LINK }}
      with:
        github-token: ${{ inputs.LEATHER_BOT }}
        script: |
          const { BUILD_LINK } = process.env
          if(BUILD_LINK) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Expo Android build link: " + BUILD_LINK
            })
          }

    - name: ðŸ›« Build for production ðŸ›«
      if: ${{ steps.extract_branch.outputs.branch == 'dev' }}
      run: |
        cd apps/mobile
        # Release version of the app, we should wait for it to see the result
        eas build --platform android --profile=production --non-interactive --auto-submit
        fastlane run distribute_android
      shell: bash

    - name: Firebase App Distribution
      run: |
        echo "${{ secrets.FIREBASE_TOKEN }}" > $HOME/.firebase_token
        firebase appdistribution:distribute my_app.apks --app "1:915379517791:android:d4e7cb446a612f8c789eea" --groups "testers"
