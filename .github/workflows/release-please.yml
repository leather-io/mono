on:
  push:
    branches:
      - dev

permissions:
  contents: write
  pull-requests: write

name: Release packages

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          command: manifest
          token: ${{ secrets.LEATHER_BOT }}
          default-branch: dev

    # TODO(leather-wallet/mono#133): get this back when release-please-action@4 gets an update for pnpm node workspaces.
    # steps:
    #   - uses: google-github-actions/release-please-action@v4
    #     id: release
    #     with:
    #       # this assumes that you have created a personal access token (PAT)
    #       token: ${{ secrets.LEATHER_BOT }}
    #       # optional. customize path to release-please-config.json
    #       config-file: release-please-config.json
    #       # optional. customize path to .release-please-manifest.json
    #       manifest-file: .release-please-manifest.json
    #       # Our target branch should be `dev`
    #       target-branch: dev

  # The logic below handles the npm publication:
  deploy:
    needs: release-please
    runs-on: ubuntu-latest
    # Ensure we only publish if a new release was created
    if: needs.release-please.outputs.releases_created
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/provision

      - name: Build packages
        run: pnpm build

      - name: Set publishing config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM
        run: pnpm -r publish --no-git-checks

  trigger-extension-package-update:
    needs: release-please
    if: needs.release-please.outputs.releases_created
    runs-on: ubuntu-latest
    steps:
      - name: Fire repository dispatch event
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.LEATHER_BOT }}
          repository: leather-io/extension
          event-type: leather-deps-updated

  # The logic below handles eas deployment and appstore submission:
  deploy-eas:
    needs: release-please
    runs-on: ubuntu-latest
    # Ensure we only publish if a new release was created
    if: needs.release-please.outputs.releases_created
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/eas-deploy
        with:
          EXPO_APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          ASC_APP_ID: ${{ secrets.ASC_APP_ID }}
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          LEATHER_BOT: ${{ secrets.LEATHER_BOT }}
