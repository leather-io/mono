on:
  push:
    branches:
      - dev
      - test/release-job

permissions:
  contents: write
  pull-requests: write

name: Release packages

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      changelog: ${{ steps.release.outputs.changelog }}
      mobile_changelog: ${{ steps.release.outputs.leather-io-mobile--changelog }}
      mobile_release_created: ${{ steps.release.outputs.leather-io-mobile--release-created }}
    # Our PNPM workspace issue was fixed here: https://github.com/googleapis/release-please/pull/2281
    steps:
      - uses: actions/checkout@v4

      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          command: manifest
          # this assumes that you have created a personal access token (PAT)
          token: ${{ secrets.LEATHER_BOT }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          default-branch: dev
          release-type: 'minor'
          signoff: 'leather-bot <leather-bot@leather.io>'

    # The logic below handles the npm publication:
  deploy:
    needs: release-please
    runs-on: ubuntu-latest
    # Ensure we only publish if a new release was created
    if: needs.release-please.outputs.releases_created
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/provision

      - name: Build packages
        run: pnpm build

      - name: Set publishing config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM
        run: pnpm --filter="./packages/*" publish --no-git-checks

  trigger-extension-package-update:
    needs: release-please
    if: needs.release-please.outputs.releases_created
    runs-on: ubuntu-latest
    steps:
      - name: Fire repository dispatch event
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.LEATHER_BOT }}
          repository: leather-io/extension
          event-type: leather-deps-updated

  # The logic below handles eas deployment and appstore submission:
  deploy-eas-ios:
    needs: release-please
    runs-on: ubuntu-latest
    # Ensure we only publish if a new release was created
    if: needs.release-please.outputs.mobile_release_created
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/eas-deploy-ios
        with:
          EXPO_APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          ASC_APP_ID: ${{ secrets.ASC_APP_ID }}
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          LEATHER_BOT: ${{ secrets.LEATHER_BOT }}

  # The logic below handles eas deployment and appstore submission:
  deploy-eas-android:
    needs: release-please
    runs-on: ubuntu-latest
    # Ensure we only publish if a new release was created
    if: needs.release-please.outputs.mobile_release_created
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/eas-deploy-android
        with:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON_B64 }}
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          LEATHER_BOT: ${{ secrets.LEATHER_BOT }}
