name: Code checks

on:
  merge_group:
  push:
    branches:
      - '**'

jobs:
  lint-prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/provision
      - name: Lint Prettier
        run: pnpm format:check

  check-translation-strings:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/provision
      - name: Check translation strings extraction
        run: pnpm --dir ./apps/mobile run lingui:extract
      - name: Fail if there are uncommited translations
        run: git diff-index --quiet HEAD --

  lint-syncpack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/provision
      - name: Lint Packages with Syncpack
        run: pnpm syncpack:lint

  lint-eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/provision
      - name: Lint Eslint
        run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/provision
      - name: Run typecheck recursively in each package
        run: pnpm build && pnpm typecheck

  lint-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Lint commit message
        uses: wagoid/commitlint-github-action@v4

  lint-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/provision

      - name: Lint dependency rules
        run: pnpm build && pnpm lint:deps

  lint-filenames:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/provision

      - name: Lint dependency rules
        run: pnpm lint:filenames

  test-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/provision

      - run: pnpm build

      - name: Run unit tests with code coverage
        run: pnpm test:unit

  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/provision
        with:
          fetch-depth: 0

      - run: pnpm build

      - name: Run unit tests with code coverage
        run: pnpm test:coverage

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ./app/mobile/coverage/.tmp/coverage-0.json

  test-e2e:
    runs-on: ubuntu-latest
    needs: typecheck
    if: github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v4
      - name: Prepare the app
        uses: ./.github/actions/provision

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: deploy E2E build on EAS
        working-directory: ./apps/mobile
        run: |
          eas build --profile build-and-maestro-test --platform ios --non-interactive
