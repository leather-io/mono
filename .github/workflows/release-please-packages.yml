on:
  push:
    branches:
      - fix/release-please

permissions:
  contents: write
  pull-requests: write

name: Release packages

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      changelog: ${{ steps.release.outputs.changelog }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.LEATHER_BOT }}

      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.LEATHER_BOT }}
          config-file: release-please-config-packages.json
          manifest-file: .release-please-manifest-packages.json
          target-branch: fix/release-please

  #   # The logic below handles the npm publication:
  # deploy:
  #   needs: release-please
  #   runs-on: ubuntu-latest
  #   # Ensure we only publish if a new release was created
  #   if: needs.release-please.outputs.releases_created
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/provision
  #
  #     - name: Build packages
  #       run: pnpm build
  #
  #     - name: Set publishing config
  #       run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  #
  #     - name: Publish to NPM
  #       run: pnpm --filter="./packages/*" publish --no-git-checks
  #
  # trigger-extension-package-update:
  #   needs: release-please
  #   if: needs.release-please.outputs.releases_created
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Fire repository dispatch event
  #       uses: peter-evans/repository-dispatch@v3
  #       with:
  #         token: ${{ secrets.LEATHER_BOT }}
  #         repository: leather-io/extension
  #         event-type: leather-deps-updated
